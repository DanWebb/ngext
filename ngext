#!/usr/bin/env node

const commander = require("commander");
const path = require("path");
const exec = require("child_process").exec;
const {
  copyAndTranslateAllPages,
  watchCopyAndTranslateAllPages,
} = require("./ngext-core");

const execCmd = (cmd, directory) => {
  console.log(`running $ "${cmd}" in dir: [${directory}]`);
  const child = exec(cmd, { cwd: directory });

  child.stdout.on("data", function (data) {
    console.log(data);
  });
  child.stderr.on("data", function (data) {
    console.error(data);
  });
  return new Promise((resolve, reject) => {
    child.on("close", resolve);
  });
};

const ROOT_DIR = path.join(__dirname);
const INTERMEDIATE_DIR = path.join(ROOT_DIR, '.ngext');
const NG_PATH = path.join(ROOT_DIR, "node_modules", ".bin", "ng");

commander
  .command("build")
  .description("Tests the update version feature")
  .action(async () => {
    const cwd = INTERMEDIATE_DIR;
    await copyAndTranslateAllPages();
    execCmd(`${NG_PATH} build`, cwd);
  });

commander
  .command("dev")
  .description("Tests the update version feature")
  .action(async () => {
    const cwd = INTERMEDIATE_DIR;
    await copyAndTranslateAllPages();
    watchCopyAndTranslateAllPages();
    execCmd(`${NG_PATH} serve`, cwd);
  });

commander.parse(process.argv);
