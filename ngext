#!/usr/bin/env node

const commander = require("commander");
const path = require("path");
const exec = require("child_process").exec;
const {
  copyAndTranslateAllPages,
  watchCopyAndTranslateAllPages,
} = require("./ngext-core");

const execCmd = (cmd, directory) => {
  console.log(`running $ "${cmd}" in dir: [${directory}]`);
  const child = exec(cmd, { cwd: directory });

  child.stdout.on("data", function (data) {
    console.log(data);
  });
  child.stderr.on("data", function (data) {
    console.error(data);
  });
  return new Promise((resolve, reject) => {
    child.on("close", resolve);
  });
};

commander
  .command("build")
  .description("Tests the update version feature")
  .action(async () => {
    const ng = path.join(__dirname, "node_modules", ".bin", "ng");
    const cwd = path.join(__dirname, ".intermediate");
    // execCmd(`${ng} build`, cwd);
    copyAndTranslateAllPages();
  });

commander
  .command("dev")
  .description("Tests the update version feature")
  .action(async () => {
    const ng = path.join(__dirname, "node_modules", ".bin", "ng");
    const cwd = path.join(__dirname, ".intermediate");
    watchCopyAndTranslateAllPages();
    execCmd(`${ng} serve`, cwd);
  });

commander.parse(process.argv);
